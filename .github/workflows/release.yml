name: Release

on:
  push:
    tags:
      - 'v*' # Run this workflow when a new tag starting with 'v' is pushed

jobs:
  build_and_publish:
    # Run on a standard runner, but execute steps inside an Alpine container
    runs-on: ubuntu-latest
    container: alpine:latest # Use Alpine as the base image

    steps:
      - name: Checkout code
        # Use v3 of checkout action as v4 might have issues with some container setups
        uses: actions/checkout@v3

      - name: Install Rust and targets
        # Install Rust and necessary targets using rustup within the Alpine container
        run: |
          apk update
          apk add --no-cache curl gcc musl-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable
          export PATH="$HOME/.cargo/bin:$PATH" # Add cargo to PATH for current shell

      - name: Install cross-compilation tools (mingw-w64 for Windows)
        # Use apk for Alpine package management
        run: |
          apk update
          apk add --no-cache mingw-w64-gcc

      - name: Build for Linux (x86_64)
        # Output paths are relative to the container's workspace /__w/your-repo/your-repo/
        run: |
          export PATH="$HOME/.cargo/bin:$PATH" # Ensure cargo is in PATH for build step
          cargo build --verbose --release --target x86_64-unknown-linux-gnu

      - name: Build for Windows (x86_64)
        # Output paths are relative to the container's workspace
        run: |
          export PATH="$HOME/.cargo/bin:$PATH" # Ensure cargo is in PATH for build step
          cargo build --verbose --release --target x86_64-pc-windows-gnu

      - name: Package Linux binary
        shell: bash
        run: |
          # Navigate to the correct directory within the container's workspace
          cd /__w/${{ github.repository }}/${{ github.repository }}/target/x86_64-unknown-linux-gnu/release
          tar -czf amnezia-config-decoder-linux-x86_64.tar.gz amnezia-config-decoder
          # Set the asset path relative to the runner's workspace for the release action
          echo "LINUX_ASSET=target/x86_64-unknown-linux-gnu/release/amnezia-config-decoder-linux-x86_64.tar.gz" >> $GITHUB_ENV

      - name: Package Windows binary
        shell: bash
        run: |
          # Navigate to the correct directory within the container's workspace
          cd /__w/${{ github.repository }}/${{ github.repository }}/target/x86_64-pc-windows-gnu/release
          zip amnezia-config-decoder-windows-x86_64.zip amnezia-config-decoder.exe
          # Set the asset path relative to the runner's workspace for the release action
          echo "WINDOWS_ASSET=target/x86_64-pc-windows-gnu/release/amnezia-config-decoder-windows-x86_64.zip" >> $GITHUB_ENV


      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') # Only create release for tags
        with:
          files: |
            ${{ env.LINUX_ASSET }}
            ${{ env.WINDOWS_ASSET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token is automatically provided by GitHub Actions
