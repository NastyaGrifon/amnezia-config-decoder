name: Release

on:
  push:
    tags:
      - 'v*' # Run this workflow when a new tag starting with 'v' is pushed

jobs:
  build_and_publish:
    runs-on: ubuntu-latest # Use the standard Ubuntu runner

    steps:
      - name: Checkout code
        # Use v4 of checkout action
        uses: actions/checkout@v4

      - name: Set up Rust and add targets
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal # Install minimal components
          override: true
          # Add targets for cross-compilation
          targets: x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu

      - name: Install cross-compilation tools (mingw-w64 for Windows)
        # Install the linker needed for Windows cross-compilation on Ubuntu
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build for Linux (x86_64)
        run: cargo build --verbose --release --target x86_64-unknown-linux-gnu

      - name: Build for Windows (x86_64)
        run: cargo build --verbose --release --target x86_64-pc-windows-gnu

      - name: Package Linux binary
        shell: bash
        run: |
          cd target/x86_64-unknown-linux-gnu/release
          tar -czf amnezia-config-decoder-linux-x86_64.tar.gz amnezia-config-decoder
          echo "LINUX_ASSET=target/x86_64-unknown-linux-gnu/release/amnezia-config-decoder-linux-x86_64.tar.gz" >> $GITHUB_ENV

      - name: Package Windows binary
        shell: bash
        run: |
          cd target/x86_64-pc-windows-gnu/release
          zip amnezia-config-decoder-windows-x86_64.zip amnezia-config-decoder.exe
          echo "WINDOWS_ASSET=target/x86_64-pc-windows-gnu/release/amnezia-config-decoder-windows-x86_64.zip" >> $GITHUB_ENV


      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') # Only create release for tags
        with:
          files: |}

            ${{ env.LINUX_ASSET }}
            ${{ env.WINDOWS_ASSET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token is automatically provided by GitHub Actions
